import random
import requests

from aiogram.filters import CommandStart, Command, or_f, StateFilter
from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InputMediaPhoto, FSInputFile

from filters.chat_types import ChatTypeFilter
from kbds import inline

user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private', 'group', 'supergroup']))


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    file_path = 'C:/Users/xxx/Downloads/games.jpg'
    await message.answer_photo(photo=FSInputFile(path=file_path),
                               caption='–ü—Ä–∏–≤–µ—Ç, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫', reply_markup=inline.links_kb)


@user_private_router.callback_query(F.data == 'menu')
async def menu_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_menu = InputMediaPhoto(
        media='https://t4.ftcdn.net/jpg/04/42/21/53/360_F_442215355_AjiR6ogucq3vPzjFAAEfwbPXYGqYVAap.jpg',
        caption='–õ–µ–Ω—å –¥–æ–¥–µ–ª—ã–≤–∞—Ç—å üò¢ (to be continue..)'
    )
    await callback.message.edit_media(media=photo_menu, reply_markup=inline.get_callback_btns(
        btns={
            "–ù–∞–∑–∞–¥": "back_7",
        },
        sizes=(1,)
    ))


@user_private_router.callback_query(F.data == "about")
async def about_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_0 = InputMediaPhoto(media='https://i.ibb.co/Zxk23Bp/IMG-20240415-182337-012.jpg',
                              caption='–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏—è–º–∏')
    await callback.message.edit_media(media=photo_0, reply_markup=inline.back_kb)


@user_private_router.callback_query(F.data == "game options")
async def payment_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_1 = InputMediaPhoto(media='https://i.ibb.co/DgTc6ts/menu-game.jpg', caption='–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É üåà')
    await callback.message.edit_media(media=photo_1, reply_markup=inline.games_kb)


@user_private_router.callback_query(or_f(F.data == 'game_2', F.data == 'game_3'))
async def add_games(callback: types.CallbackQuery):
    await callback.answer('')
    photo_2 = InputMediaPhoto(media='https://i.ibb.co/0Ct1XVJ/soon.jpg', caption='–í –ø—Ä–æ—Ü–µ—Å—Å–µ üí¨')
    await callback.message.edit_media(media=photo_2, reply_markup=inline.get_callback_btns(
        btns={
            "–ù–∞–∑–∞–¥": "back_4",
        },
        sizes=(1,)
    ))


@user_private_router.callback_query(F.data == 'other')
async def other_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_3 = InputMediaPhoto(media='https://i.ibb.co/3YsGgmT/other.jpg')
    await callback.message.edit_media(media=photo_3, reply_markup=inline.other_kb)


@user_private_router.callback_query(F.data == 'my_urls')
async def other_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_4 = InputMediaPhoto(media='https://i.ibb.co/3YsGgmT/other.jpg', caption='–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ :)')
    await callback.message.edit_media(media=photo_4, reply_markup=inline.url_kb)


@user_private_router.callback_query(F.data == 'bio')
async def other_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_5 = InputMediaPhoto(media='https://i.ibb.co/3YsGgmT/other.jpg', caption='–ß—É–Ω–≥–∞ —á–∞–Ω–≥–∞ –µ–±–∞–Ω–∞—è üòé')
    await callback.message.edit_media(media=photo_5, reply_markup=inline.get_callback_btns(
        btns={
            "–ù–∞–∑–∞–¥": "back_5",
        },
        sizes=(1,)
    ))


@user_private_router.callback_query(F.data == 'weather')
async def other_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_6 = InputMediaPhoto(media='https://i.ibb.co/3YsGgmT/other.jpg', caption='–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥')
    await callback.message.edit_media(media=photo_6, reply_markup=inline.get_callback_btns(
        btns={
            '–ù–∞–∑–∞–¥': 'back_6',
        },
        sizes=(1,)
    ))


@user_private_router.message(F.text)
async def get_weather(message: types.Message):
    city = message.text
    try:
        url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&units=metric&lang=ru&appid=79d1ca96933b0328e1c7e3e7a26cb347'
        weather_data = requests.get(url).json()

        temperature = weather_data['main']['temp']
        temperature_feels = weather_data['main']['feels_like']
        wind_speed = weather_data['wind']['speed']
        cloud_cover = weather_data['weather'][0]['description']
        humidity = weather_data['main']['humidity']

        await message.answer(f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}¬∞C\n'
                             f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}¬∞C\n'
                             f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n'
                             f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover}\n'
                             f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%')
    except KeyError:
        await message.answer(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥: {city}')


@user_private_router.callback_query(or_f(F.data == 'back_1', F.data == 'back_2', F.data == 'back_3',
                                         F.data == 'back_7'))
async def back_menu(callback: types.CallbackQuery):
    photo_7 = InputMediaPhoto(
        media='https://t4.ftcdn.net/jpg/04/42/21/53/360_F_442215355_AjiR6ogucq3vPzjFAAEfwbPXYGqYVAap.jpg',
        caption='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!')
    await callback.message.edit_media(media=photo_7, reply_markup=inline.links_kb)


@user_private_router.callback_query(F.data == 'back_4')
async def back_2_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_8 = InputMediaPhoto(media='https://i.ibb.co/DgTc6ts/menu-game.jpg', caption='–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É üåà')
    await callback.message.edit_media(media=photo_8, reply_markup=inline.games_kb)


@user_private_router.callback_query(or_f(F.data == 'back_5', F.data == 'back_6'))
async def other_cmd(callback: types.CallbackQuery):
    await callback.answer('')
    photo_9 = InputMediaPhoto(media='https://i.ibb.co/3YsGgmT/other.jpg')
    await callback.message.edit_media(media=photo_9, reply_markup=inline.other_kb)


# –ö–æ–¥ –Ω–∏–∂–µ –¥–ª—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π (FSM)
class Games(StatesGroup):
    data_input = State()

    texts = {
        'Games:data_input': '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∑–∞–Ω–æ–≤–æ:',
    }


@user_private_router.callback_query(StateFilter(None),
                                    or_f(F.data == 'game_1', F.data == 'again'))
async def add_games(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer('')
    await callback.message.answer(
        '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 2', reply_markup=inline.game_1)
    await state.set_state(Games.data_input)


# –•–µ–Ω–¥–ª–µ—Ä –æ—Ç–º–µ–Ω—ã –∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å,
# –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–º–µ—Ä 1 (—ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞—è –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤)
@user_private_router.callback_query(StateFilter('*'), F.data == "cancel")
async def cancel_handler(callback: types.CallbackQuery, state: FSMContext) -> None:
    await callback.answer('')
    current_state = await state.get_state()
    if current_state is None:
        return

    await state.clear()
    await callback.message.edit_text("–î–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã")


# –í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ (–Ω–∞ –ø—Ä–æ—à–ª–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
@user_private_router.message(StateFilter('*'), Command("–Ω–∞–∑–∞–¥"))
@user_private_router.message(StateFilter('*'), F.text.casefold() == "–Ω–∞–∑–∞–¥")
async def back_step_handler(message: types.Message, state: FSMContext) -> None:
    current_state = await state.get_state()

    if current_state == Games.data_input:
        await message.answer('–ü—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ –Ω–µ—Ç, –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞"')
        return

    previous = None
    for step in Games.__all_states__:
        if step.state == current_state:
            await state.set_state(previous)
            await message.answer(f"–û–∫, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –ø—Ä–æ—à–ª–æ–º—É —à–∞–≥—É \n {Games.texts[previous.state]}")
            return
        previous = step


@user_private_router.callback_query(Games.data_input, F.data)
async def add_data_output(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(data_input=callback.data)
    random_number = random.randint(1, 2)
    data = await state.get_data()
    # await message.answer(str(data))
    if int(data['data_input']) == random_number:
        await callback.message.edit_text('–í—ã —É–≥–∞–¥–∞–ª–∏', reply_markup=inline.again_kb)
    else:
        await callback.message.edit_text("–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ :(")
        await callback.message.edit_text(f"–ë—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ {random_number}", reply_markup=inline.again_kb)

    await state.clear()
